version: '3.1'

services:
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: jay
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    networks:
      - ecommerce
    volumes:
      - postgres:/data/postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: jay@mail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - ecommerce
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: unless-stopped

  rabbitmq:
    image: 'rabbitmq:3.13-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - ecommerce
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  storage:
    container_name: storage
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ecom-storage
      MINIO_ROOT_PASSWORD: secret1234
    command: server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://storage:9000/minio/health/live" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - ecommerce
    volumes:
      - storage:/storage

  createbucket:
    image: minio/mc
    depends_on:
      storage:
        condition: service_healthy
    networks:
      - ecommerce
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set ecommerce-project http://storage:9000 ecom-storage secret1234;
      /usr/bin/mc mb ecommerce-project/images;
      exit 0;
      "      

networks:
  ecommerce:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  storage:
